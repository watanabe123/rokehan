# default rules
homepage:
  url:   /
  param: { module: default, action: index }

default_index:
  url:   /:module
  param: { action: index }

no_default:
  url: /default/*
  param: { module: default, action: error }

default:
  url:   /:module/:action/*

activity_search:
  url: /activity/search.json
  param: { module: activity, action: search, sf_format: json }
  requirements: { sf_method: [get] }

activity_list:
  url: /activity/list.json
  param: { module: activity, action: search, sf_format: json }
  requirements: { sf_method: [get] }

activity_member:
  url: /activity/member.json
  param: { module: activity, action: member, sf_format: json }
  requirements: { sf_method: [get] }

activity_friends:
  url: /activity/friends.json
  param: { module: activity, action: friends, sf_format: json }
  requirements: { sf_method: [get] }

activity_community:
  url: /activity/community.json
  param: { module: activity, action: community, sf_format: json }
  requirements: { sf_method: [get] }

activity_mentions:
  url: /activity/mentions.json
  param: { module: activity, action: mentions, sf_format: json }
  requirements: { sf_method: [get] }

activity_post:
  url: /activity/post.json
  param: { module: activity, action: post, sf_format: json }
  requirements: { sf_method: [post, get] }

activity_delete:
  url: /activity/delete.json
  param: { module: activity, action: delete, sf_format: json }
  requirements: { sf_method: [get] }

member_search:
  url: /member/search.json
  param: { module: member, action: search, sf_format: json }
  requirements: { sf_method: [get] }

member_list:
  url: /member/list.json
  param: { module: member, action: search, sf_format: json }
  requirements: { sf_method: [get] }

member_community:
  url: /member/community.json
  param: { module: member, action: community, sf_format: json }
  requirements: { sf_method: [get] }

member_friend_accept:
  url: /member/friend_accept.json
  param: { module: member, action: friendAccept, sf_format: json }
  requirements: { sf_method: [get] }

member_friend_reject:
  url: /member/friend_reject.json
  param: { module: member, action: friendAccept, sf_format: json, reject: 1 }
  requirements: { sf_method: [get] }

member_friend_request:
  url: /member/friend_request.json
  param: { module: member, action: friendRequest, sf_format: json, }
  requirements: { sf_method: [get] }

member_friend_unlink:
  url: /member/friend_unlink.json
  param: { module: member, action: friendRequest, sf_format: json, unlink: 1 }
  requirements: { sf_method: [get] }

community_search:
  url: /community/search.json
  param: { module: community, action: search, sf_format: json }
  requirements: { sf_method: [get] }

community_list:
  url: /community/list.json
  param: { module: community, action: search, sf_format: json }
  requirements: { sf_method: [get] }

community_member:
  url: /community/member.json
  param: { module: community, action: member, sf_format: json }
  requirements: { sf_method: [get] }

community_join:
  url: /community/join.json
  param: { module: community, action: join, sf_format: json }
  requirements: { sf_method: [get] }

push_search:
  url: /push/search.json
  param: { module: push, action: search, sf_format: json }
  requirements: { sf_method: [get] }

push_list:
  url: /push/list.json
  param: { module: push, action: search, sf_format: json }
  requirements: { sf_method: [get] }

push_count:
  url: /push/count.json
  param: { module: push, action: count, sf_format: json }
  requirements: { sf_method: [get] }

push_read:
  url: /push/read.json
  param: { module: push, action: read, sf_format: json }
  requirements: { sf_method: [get] }
